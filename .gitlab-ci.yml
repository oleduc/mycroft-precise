# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.9

# Include templates from https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates
# We could add more later, see here: https://gitlab.com/gitlab-org/gitlab/-/blob/master/doc/development/cicd/templates.md
include:
  - template: Jobs/Code-Quality.gitlab-ci.yml

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  BUILD_IMAGE: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG"
  # This ensure python package build is the liant-precise and not mycroft-precise
  PYPI_LIANT: 'true'


# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

build-wheel:
  stage: build
  variables:
    PYPI_LOCAL_LABEL: $CI_COMMIT_REF_SLUG
    PYPI_TAG: $CI_COMMIT_TAG
  script:
    - pip install build
    - python -m build
  artifacts:
    when: always
    paths:
      - dist/*.whl
      - dist/*.tar.gz
  rules:
    - if: ($CI_COMMIT_BRANCH || $CI_COMMIT_TAG) && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      allow_failure: true
      when: on_success
    - if: ($CI_COMMIT_BRANCH || $CI_COMMIT_TAG) && $CI_COMMIT_TAG
      allow_failure: false
      when: on_success

build-image:
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  services:
    - docker:20.10.16-dind
  tags:
    - amd64
  stage: build
  image: docker:20.10.16
  script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --target test-runner -t $BUILD_IMAGE:test-runner -f test/Dockerfile .
    - docker push $BUILD_IMAGE:test-runner

test:
  image:
    name: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:test-runner"
    entrypoint: [""]
  tags:
    - amd64
  stage: test
  needs:
    - build-image
  script:
    - pytest

.local-test:
  stage: test
  needs: []
  before_script:
    - ./setup.sh
    - export VENV=${VENV-$(pwd)/.venv}
    - source "$VENV/bin/activate"
    - python3 -m pip install --no-cache-dir -r test/requirements.txt
  script:
    - python3 -m pytest
  rules:
    - if: ($CI_COMMIT_BRANCH || $CI_COMMIT_TAG)
      when: on_success
    - when: never

test-darwin:
  extends: .local-test
  tags:
    - darwin

test-arm64-linux:
  extends: .local-test
  tags:
    - arm64
    - linux

deploy-merge-request:
  stage: deploy
  variables:
    PYPI_LOCAL_LABEL: $CI_COMMIT_REF_SLUG
  script:
    - |
      if [ ! -d 'dist' ] || [ "$(ls -A dist)" = "" ]; then
        echo No package found in dist/, check build-wheel job to know why.
        echo Failing package push.
        exit 1
      fi
    - python3 -m pip install twine
    - >
      TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token
      python -m twine upload
      --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
      dist/*
  needs:
    - build-wheel
    - test
    - test-darwin
    - test-arm64-linux
  rules:
    - if: ($CI_COMMIT_BRANCH || $CI_COMMIT_TAG) && $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH
      allow_failure: true
      when: on_success

deploy:
  stage: deploy
  variables:
    PYPI_LOCAL_LABEL: $CI_COMMIT_REF_SLUG
  script:
    - python3 -m pip install twine
    # I prevent any deployment of not liant-precise package to pypi.org
    - TWINE_PASSWORD=${PYPI_TOKEN} TWINE_USERNAME=__token__ python -m twine upload dist/liant*
  needs:
    - build-wheel
    - test
    - test-darwin
    - test-arm64-linux
  rules:
    - if: ($CI_COMMIT_BRANCH || $CI_COMMIT_TAG) && $CI_COMMIT_TAG
      when: manual
# pages:
#   script:
#     - ./gitlab-ci/pages.sh
#   artifacts:
#     paths:
#       - public
#   rules:
#     - if: $CI_COMMIT_BRANCH == "master"
